@charset "UTF-8";
html {
  font-family: 'Poppins', sans-serif;
  font-size: 16px;
  scroll-behavior: smooth;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  margin: 0;
  color: #023246;
}

body {
  margin: 0;
}

h1, h2, h3, h4 {
  font-family: 'Chango', cursive;
}

h1 {
  font-size: 9rem;
}

h2 {
  font-size: 6rem;
}

h3 {
  font-size: 4rem;
}

h4 {
  font-size: 3rem;
  margin: 0;
}

a, a:visited {
  color: #287094;
}

a:hover, a:focus {
  color: #023246;
}

.page-link {
  font-size: 3rem;
  float: right;
}

header {
  position: fixed;
  top: 0;
  padding: 1rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: left;
      -ms-flex-pack: left;
          justify-content: left;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #f6f6f6;
  width: 100%;
}

header img {
  width: 1%;
}

header h2 {
  color: #023246;
  font-size: 1rem;
}

article {
  padding: 2rem 20%;
  font-size: 2rem;
  min-height: 100vh;
}

.front-page {
  background-color: #f6f6f6;
  height: 100vh;
  position: relative;
}

.front-page .page-link {
  font-size: 3rem;
  position: absolute;
  bottom: 9rem;
  float: right;
  right: 24rem;
}

.front-page .front-page-title {
  margin: 0;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.front-page .front-page-title img {
  width: 10%;
  margin-right: 2rem;
  display: inline;
}

.front-page .front-page-title h1, .front-page .front-page-title h2 {
  color: #023246;
  display: inline;
}

.usage, .comparison {
  background-image: url(./images/wp7752259.jpg);
  background-size: cover;
}

.usage h2, .comparison h2 {
  margin-bottom: 1rem;
  color: #f6f6f6;
}

.usage h4, .comparison h4 {
  margin-top: 1rem;
  color: #d4d4ce;
}

.usage a, .usage a:visited, .comparison a, .comparison a:visited {
  color: #f6f6f6;
}

.usage a:hover, .usage a:focus, .comparison a:hover, .comparison a:focus {
  color: #d4d4ce;
}

.usage .image-container, .comparison .image-container {
  margin-top: 2rem;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1rem;
  margin-bottom: 5rem;
}

.usage .image-container img, .comparison .image-container img {
  width: 7%;
  height: 5rem;
  background-color: #f6f6f6;
  border-radius: 5%;
  padding: 1rem;
}

.usage .image-container img:hover, .comparison .image-container img:hover {
  background-color: #d4d4ce70;
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;
  cursor: pointer;
}

.usage .image-container h2, .comparison .image-container h2 {
  display: inline;
  margin: 0;
}

.comparison {
  background-image: none;
  background-color: #287094;
  color: #f6f6f6;
}

.comparison p {
  font-size: 1.2rem;
}

.comparison .comparation-container {
  margin-top: 0.5rem;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1rem;
}

.comparison .comparation-container img {
  width: 3rem;
  height: 3rem;
  background-color: #f6f6f6;
  border-radius: 5%;
  padding: 1rem;
}

.comparison .comparation-container img:hover {
  background-color: #d4d4ce70;
  -webkit-transition: background-color 0.5s ease;
  transition: background-color 0.5s ease;
  cursor: pointer;
}

.comparison table.blueTable {
  width: 100%;
  text-align: center;
}

.comparison table.blueTable td, .comparison table.blueTable th {
  padding: 3px 2px;
}

.comparison table.blueTable tbody td {
  font-size: 1.2rem;
}

.comparison table.blueTable tbody td img {
  width: 4rem;
}

.comparison table.blueTable thead {
  border-bottom: 2px solid #444444;
}

.comparison table.blueTable thead th {
  font-size: 1.5rem;
  font-weight: bold;
  color: #FFFFFF;
  border-left: 2px solid #D0E4F5;
}

.comparison table.blueTable thead th:first-child {
  border-left: none;
}

tr:hover {
  background-color: #d4d4ce70;
  cursor: pointer;
}

td:first-of-type {
  font-weight: bold;
  text-align: left;
}

/* .tailwind {
    
} */
.bootstrap {
  background-color: #f6f6f6;
}

.uikit {
  background-color: #f6f6f6;
}

.utility {
  background-image: url(./images/876094.png);
  background-size: cover;
  color: #f6f6f6;
}

.utility a {
  color: #f6f6f6;
}

.utility h4 {
  margin-bottom: 2rem;
}

footer {
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background-color: #f6f6f6;
  color: #023246;
}

form {
  margin: 2em 0;
  width: 25%;
  margin-left: auto;
  margin-right: auto;
}

/**
  * Make the field a flex-container, reverse the order so label is on top.
  */
.field {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: reverse;
      -ms-flex-flow: column-reverse;
          flex-flow: column-reverse;
  margin-bottom: 1em;
}

/**
  * Add a transition to the label and input.
  * I'm not even sure that touch-action: manipulation works on
  * inputs, but hey, it's new and cool and could remove the 
  * pesky delay.
  */
label, input {
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
}

input {
  font-size: 1.5em;
  border: 1px solid #ccc;
  border-radius: 0.5rem;
  font-family: inherit;
  -webkit-appearance: none;
  padding: 0;
  cursor: text;
}

input:focus {
  outline: 0;
  border-bottom: 1px solid #666;
}

label {
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/**
  * Translate down and scale the label up to cover the placeholder,
  * when following an input (with placeholder-shown support).
  * Also make sure the label is only on one row, at max 2/3rds of the
  * fieldâ€”to make sure it scales properly and doesn't wrap.
  */
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-transform-origin: left bottom;
          transform-origin: left bottom;
  -webkit-transform: translate(0, 2.125rem) scale(1.5);
          transform: translate(0, 2.125rem) scale(1.5);
}

/**
  * By default, the placeholder should be transparent. Also, it should 
  * inherit the transition.
  */
::-webkit-input-placeholder {
  opacity: 0;
  -webkit-transition: inherit;
  transition: inherit;
}

/**
  * Show the placeholder when the input is focused.
  */
input:focus::-webkit-input-placeholder {
  opacity: 1;
}

/**
  * When the element is focused, remove the label transform.
  * Also, do this when the placeholder is _not_ shown, i.e. when 
  * there's something in the input at all.
  */
input:not(:placeholder-shown) + label,
input:focus + label {
  -webkit-transform: translate(4px, 9px) scale(0.7);
          transform: translate(4px, 9px) scale(0.7);
  cursor: pointer;
  background-color: white;
  padding-left: 4px;
}

.logo {
  width: 20%;
  height: 20%;
}

.grid-container {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 50% 50%;
      grid-template-columns: 50% 50%;
}

.display-flex {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.inline {
  display: inline;
}

.red {
  color: #d68282;
}

.green {
  color: #8ec28e;
}
/*# sourceMappingURL=style.css.map */